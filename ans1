This problem was asked by Microsoft.

A number is considered perfect if its digits sum up to exactly 10.

Given a positive integer n, return the n-th perfect number.

For example, given 1, you should return 19. Given 2, you should return 28.


## input: some positive integer n
## output : n-th perfect number

##questions : is there a upper limit for n? can n be something like 10,000? Is there any time complexity requirement? or space complexity too?

def perfect(n):
    str_n = list(str(n))

    int_str_n = [int(x) for x in str_n]

    rem = 10 - sum(int_str_n)

    int_str_n.append(rem)

    str_n=map(str,int_str_n)

    ans = ''.join(str_n)

    return int(ans)

print(perfect(19))
  
  
     
  
  
